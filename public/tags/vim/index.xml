<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vim on jtr109&#39;s Castle</title>
    <link>https://jtr109.github.io/tags/vim/</link>
    <description>Recent content in vim on jtr109&#39;s Castle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 07 Nov 2019 22:41:13 +0000</lastBuildDate>
    
	<atom:link href="https://jtr109.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在 NeoVim 中修改指定文件类型的缩进</title>
      <link>https://jtr109.github.io/posts/changing-indent-in-neovim/</link>
      <pubDate>Thu, 07 Nov 2019 22:41:13 +0000</pubDate>
      
      <guid>https://jtr109.github.io/posts/changing-indent-in-neovim/</guid>
      <description>问题描述 使用 NeoVim 编辑 .sql 文件的时候发现默认的换行是一个 8 space 的 tab. 希望能将其改成 4 spaces.
问题拆解 这其实会涉及到两个问题:
 Vim (NeoVim) 中如何修改缩进 如何对指定文件类型修改配置  修改缩进 关于修改缩进的需要做几个配置, 在这篇提问中可以找到解答:
filetype plugin indent on&amp;#34; On pressing tab, insert 2 spacesset expandtab&amp;#34; show existing tab with 2 spaces widthset tabstop=2set softtabstop=2&amp;#34; when indenting with &amp;#39;&amp;gt;&amp;#39;, use 2 spaces widthset shiftwidth=2我们只要将 2 改成 4 就能符合我们的要求. 但是还有一个问题: 如果按照这样修改, 会全局修改我们的缩进规则, 而我们只希望这个配置在指定类型的文件中生效.
查看文件类型 为了对指定文件做配置, 我们首先需要知道 Vim 认为当前文件属于什么类型. 可以在 Normal 状态下使用命令:
:set filetype?</description>
    </item>
    
    <item>
      <title>Replace In All Files</title>
      <link>https://jtr109.github.io/posts/replace-in-all-files/</link>
      <pubDate>Thu, 07 Nov 2019 22:40:05 +0000</pubDate>
      
      <guid>https://jtr109.github.io/posts/replace-in-all-files/</guid>
      <description>背景 在项目开发过程中, 有时需要全局替换一些变量名. 如果使用 VSCode 这类现代编辑器, 可以十分便利地办到. 但是使用 Vim (or NeoVim) 就没有那么容易了.
方案 我们需要一个方案来实现全局替换的需求. 需要满足如下要求:
 可以自定义查找范围. 包括:   选择根路径 筛选符合指定 pattern 的文件 排除符合指定 pattern 的文件  查看确认筛选结果后, 执行修改  目前想到的办法是通过 ripgrep 和 sed 实现, 具体方法可以参照 ripgrep 的文档.
工作流 全局查找 ❯ rg &amp;#34;println&amp;#34; . ./src/main.rs 2: println!(&amp;#34;Hello world!&amp;#34;); ./backend/src/bin/todo.rs 8: println!(&amp;#34;subcommands&amp;#34;); 9: println!(&amp;#34; new&amp;lt;title&amp;gt;: create a new task&amp;#34;); 33: println!(&amp;#34;new: missing &amp;lt;title&amp;gt;&amp;#34;); 44: println!(&amp;#34;show: unexpected argument&amp;#34;); 50: println!(&amp;#34;TASKS\n-----&amp;#34;); 52: println!</description>
    </item>
    
    <item>
      <title>在 VIM 中赋值搜索寄存器</title>
      <link>https://jtr109.github.io/posts/set-search-pattern-register/</link>
      <pubDate>Wed, 25 Oct 2017 20:07:41 +0800</pubDate>
      
      <guid>https://jtr109.github.io/posts/set-search-pattern-register/</guid>
      <description>In English Highlight the search pattern register in VIM.
实现的目的 有的时候会遇到这样一个场景. 在当前文件中调用了一个函数, 而这个函数在另一个文件中被定义. 如果有 jedi 之类的神器帮助跳转当然再好不过, 不过如果项目足够复杂, 有的时候 jedi 还是力不从心的. 当这时, 我们的目标可能就变成:
将光标下的单词能在另一个文件下通过最简单的方式定位到.
简单做法 最简单的做法, 当然是在 normal mode 下使用 * 把搜索寄存器中的内容更新为光标下的单词. 但是这么做的问题是, 如果该页还有其他匹配项, 就会发生一次跳转. 需要使用 &amp;lt;c-o&amp;gt; 跳转回刚刚的位置.
然后 :b# 切换到另一个文件 (希望你和我一样设置了映射, 我的是 &amp;lt;leader-b&amp;gt;). 文件切换我们这里不做展开.
这样的做法比较简单, 但是不够优雅.
存储到搜索寄存器 那么问题就简单了 &amp;ndash; 怎样可以更新搜索寄存器.
通过 :h registers 可以了解到:
10. Last search pattern register	&amp;#34;/	*quote_/* *quote/* Contains the most recent search-pattern. This is used for &amp;#34;n&amp;#34; and &amp;#39;hlsearch&amp;#39;.</description>
    </item>
    
    <item>
      <title>vim 插件配置笔记</title>
      <link>https://jtr109.github.io/posts/vim-plugs-note/</link>
      <pubDate>Sun, 13 Aug 2017 13:20:52 +0800</pubDate>
      
      <guid>https://jtr109.github.io/posts/vim-plugs-note/</guid>
      <description>1. 使用技巧 2. VIM 配置 2.1 vim-airline 2.1.1 airline 显示问题 在安装 airline 的过程中, 你很有可能会和我一样踩到很多坑, 这里就和大家分享一下我的经验.
安装成功后 airline 未显示 遇到这个问题是因为没有为 airline 配置设施的行数, 请在 .vimrc 中做如下配置:
set laststatus=2 airline 箭头, 符号显示乱码 airline 的乱码问题主要是由于字体问题, 需要通过安装字体和配置 .vimrc 解决. 笔者在安装的过程中也遇到了这个问题, 寻找半天, 终于找到了最平滑易懂的解决办法. 编辑并与大家分享:
作者：八云 原文地址: 如何在 Ubuntu 下正确显示 vim-airline 的箭头符号？
** 字体补丁安装 **
  首先你要安装了补丁字体 powerline/fonts - GitHub, 克隆下来.    运行 ./install.sh 重新设定字体(for gvim)比如 终端也要相应设定(for vim) set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 11 &amp;quot;config font for gvim&amp;quot; for gvim  注: 我没有看明白上面最后一句的配置, 所以并没有执行, 但仍达到了效果.</description>
    </item>
    
    <item>
      <title>vim 使用技巧</title>
      <link>https://jtr109.github.io/posts/vim-skills/</link>
      <pubDate>Sun, 13 Aug 2017 11:50:29 +0800</pubDate>
      
      <guid>https://jtr109.github.io/posts/vim-skills/</guid>
      <description>删除行末的空格 :%s/\s\+$//e有几点值得注意:
 e tag 的作用是 error no display, 这里加入的目的是为了在没有可替换内容的时候不发出错误提示. 可以发现这里的正则表达式中, &amp;ldquo;多个空格&amp;rdquo; 的处理是 \s\+, 这里需要留意, + 也是需要转义的.  </description>
    </item>
    
  </channel>
</rss>